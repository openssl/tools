Performance testing tools
=========================

This directory holds tools for carrying out performance tests on OpenSSL.

The various performance test applications are held within this directory, and
various helper files are held in perflib.

The performance test applications are intended to be linked against a supported
OpenSSL version, e.g. 3.1, 3.0, 1.1.1 - which is the version of OpenSSL that
is to be tested. Typically we would expect the apps to be built multiple times
(once for each target OpenSSL version to be tested).

To build the tests we assume that the target OpenSSL has already been built.
Two environment variables are required:

TARGET_OSSL_INCLUDE_PATH: Points to a directory where the OpenSSL include files
are held (e.g. typically "include" under the build directory).

TARGET_OSSL_LIBRARY_PATH: Points to a directory where libcrypto.so and libssl.so
are contained.

To build:

export TARGET_OSSL_INCLUDE_PATH=/path/to/openssl/include
export TARGET_OSSL_LIBRARY_PATH=/path/to/openssl
make

The performance testing apps must be run ensuring that libcrypto.so and
libssl.so are on the library path.

For example:

LD_LIBRARY_PATH=/path/to/openssl ./randbytes 10

Each performance testing app will take different parameters. They are described
individually below. All performance testing apps take the "--terse" option
which has the affect of just printing bare performance numbers without any
labels.

randbytes
---------

The randbytes test repeated calls the RAND_bytes() function in blocks of 100
calls, and 100 blocks per thread. The number of threads to use is provided as
an argument and the test reports the average time take to execute a block of 100
RAND_bytes() calls.

handshake
---------

Performs a combined in-memory client and server handshake. Each thread performs
1000 such handshakes. It takes 2 arguments:

certsdir - A directory where 2 files exist (servercert.pem and serverkey.pem) for
the server certificate and key. The test/certs directory of the main OpenSSL
source repository contains such files for all supported branches.

threadcount - The number of threads to perform handshakes on in the test

The output is two values: the average time taken for a handshake in us, and the
average handshakes per second performed over the course of the test.
