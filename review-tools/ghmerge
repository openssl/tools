#! /bin/bash

set -o errexit

if [ ! -d .git ] ; then
    echo Not at top-level
    exit 1
fi

TRIVIAL=""
if [ "$1" == "--trivial" ] ; then
    TRIVIAL="--trivial" ; shift
fi
MERGE="yes"
if [ "$1" == "--merge" -o "$1" == "--squash" ] ; then
    MERGE=yes ; shift
fi
if [ "$1" == "--nomerge" -o "$1" == "--nosquash" ] ; then
    MERGE=no ; shift
fi

if [ $# -lt 2 ] ; then
    echo Usage: `basename $0` '[--trivial] [--merge] prnum reviewer...'
    exit 1
fi
PRNUM=$1 ; shift
case "$PRNUM" in
    -*)
        echo Usage: `basename $0` '[--trivial] [--[no]merge] prnum reviewer...'
        exit 1
        ;;
esac

curl -s https://api.github.com/repos/openssl/openssl/pulls/$PRNUM >/tmp/gh$$
TEAM=$*
set -- `python -c '
from __future__ import print_function
import json, sys;
print(str(json.load(sys.stdin)["head"]["label"]).replace(":", " "))' </tmp/gh$$`
rm /tmp/gh$$
WHO=$1
BRANCH=$2

if [ -z "$WHO" -o -z "$BRANCH" ]; then
    echo "Don't know from which branch to fetch"
    exit 1
fi

REL=`git rev-parse --abbrev-ref HEAD`
WORK="${WHO}-${BRANCH}"
PREV=

git checkout -b $WORK $REL

function cleanup {
    if [ "$WORK" != "$REL" ]; then
        git checkout -q $REL
        git branch -D $WORK
    fi
}
trap 'cleanup' EXIT


git pull --rebase https://github.com/$WHO/openssl.git $BRANCH
git rebase $REL
echo Diff against $REL
git diff $REL

echo -n Press return to merge to $REL and build: ; read foo
addrev $TRIVIAL --prnum=$PRNUM $TEAM ${REL}..
git checkout $REL
if [ "$MERGE" == "yes" ] ; then
    git merge --no-commit --squash $WORK
    AUTHOR=`git show --no-patch --pretty="format:%an <%ae>" $WORK`
    git commit --author="$AUTHOR"
else
    git rebase $WORK
fi
# echo Rebuilding
# opensslbuild |& tail -3

while true ; do
    echo -n "Enter YES to push or NO to abort: "
    read x
    x="`echo $x | tr A-Z a-z`"
    if [ "$x" = "y" -o "$x" = "yes" -o "$x" = "n" -o "$x" = "no" ] ; then
        break
    fi
done

if [ "$x" = "y" -o "$x" = "yes" ] ; then
    git push origin $REL
fi
